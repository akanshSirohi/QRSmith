plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    namespace 'com.akansh.qrsmith'
    compileSdk 35

    defaultConfig {
        minSdk 24
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    implementation "com.google.zxing:core:3.5.3" // Keep as implementation for internal use
}

androidComponents {
    onVariants(selector().all()) { variant ->
        variant.packagedDependencies {
            // Ensure dependencies are packaged with the AAR
            artifact(
                    file("$buildDir/outputs/aar/${project.name}-${variant.name}.aar")
            )
        }
    }
}

// Task to generate sources JAR
def sourceJarTask = tasks.register("sourceJar", Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId "com.github.akanshSirohi"
                artifactId "QRSmith"
                version "0.1.3"

                // Explicitly include the AAR artifact
                artifact("$buildDir/outputs/aar/${project.name}-release.aar") {
                    builtBy tasks.named("bundleReleaseAar") // Ensure the AAR is built before publishing
                }

                // Include sources JAR
                artifact(sourceJarTask)
            }
        }
    }
}
